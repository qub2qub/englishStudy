Had the check been omitted, the method would return a reference..

On the contrary, you should design methods to be as general as it is practical to make them.

The modest work that it entails will be paid back with interest the first time a validity check fails.

Either way, it is worth taking the time to ...

That said, you are generally better off using a constructor or static factory, for reasons outlined in Item 11.

..then it may be appropriate to dispense with defensive copying.

..would harm no one but the client

When in doubt, leave it out.

but you’re still much better off with short parameter lists.

Either way, it is worth taking the time to write classes that are robust in the face of ill-behaved clients.

then it may be appropriate to dispense with defensive copying.

Exactly what constitutes a confusing use of overloading is open to some debate.

smt can easily confound these expectations.

so it pays to know how to do it safely.

you are retrofitting an existing class to implement a new interface

This solution corrects all the deficiencies of the previous one

there is a pattern that lets you have your cake and eat it too.

It is not uncommon to see... [methods that look something like this]

in the midst of processing
even if the failure occurred in the midst of performing an operation. 

Under these circumstances,..
the nuts and bolts of the ..

some people continue to do this out of habit. It’s a habit worth breaking. 

Here is how it looks

If n is large, this effect can be quite pronounced. = эффект будет довольно явным.

it pays to keep abreast of ...
быть в курсе, держать в курсе
не отставать от (keep pace with, keep abreast of, be abreast with)
идти в ногу с (keep pace with, keep abreast of, keep step with, be abreast with)

If performance is of the essence, you don’t mind keeping track of  .. and ..., use it.

it’s important that you remain aware of 

hard work pays off
/cheryl, hard work's pay it off.

but it makes for an interesting example

the client ignored the distinction between .. and suffered the consequences. 

be wary of the traps mentioned in this item

but this does nothing to diminish the point.

You can obtain many of the benefits of reflection while incurring few of its costs by using it only in a very limited form.

.. that purport to offer better performance. 

ALL OTHER THINGS BEING EQUAL, ...

The cardinal rule in deciding whether to use ...smt

In a word, never. == типа краткий и ёмкий ответ одним словом

For example, consider the case of resource exhaustion, which can be caused by ..

a genuine shortage of resources. 

you’re probably better off using an unchecked exception..

to ferret out additional information -- [`ferıt`aʊt] --  вынюхивать, разведывать, выпытывать, разузнавать

hard-and-fast rules - жёсткое правило (безоговорочное/безусловное/непреложное)

 if it isn’t feasible to prevent or to handle smt ... (then do smt)

Lengthy prose descriptions of the failure are generally superfluous; 
the information can be gleaned by reading the source code.

leave the object in the state that it was in prior to the invocation.

it bears repeating.

You may get away with it, or the results may be disastrous.

At the very least, 

at a point in the code that bears no apparent relation to the source of the problem.

which is tailor-made for this purpose. - сделанный по заказу; приспособленный

A few more details bear noting.
Two variants of the double-check idiom bear noting. 

condition already holds - условие уже выполнено

There are several reasons a thread might wake up when the condition does not hold.

great care must be taken to ensure liveness.

It is imperative that the user manually synchronize on the returned map

...but this flexibility comes at a price.

While this example may seem a bit far-fetched, it’s not uncommon to see smt

it is worth the effort.

an ill-designed serialized form can be crippling.

ignoring for the moment that you’d be better off using one of the standard List implementations

it’s also fine to pick a number out of thin air.


